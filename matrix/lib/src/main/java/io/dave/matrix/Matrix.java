/*
 * This source file was generated by the Gradle 'init' task
 */
package io.dave.matrix;

public class Matrix {

    private int columns;
    private int rows;

    private double[][] data;

    private Matrix(int columns, int rows, double[][] data) {
        this.rows = rows;
        this.columns = columns;
        this.data = data;

        data = new double[rows][columns];
    }

    private Matrix(double[][] data) {
        this.rows = data.length;
        this.columns = data[0].length;
        this.data = data;
    }

    public double get(int row, int column){
        return data[row][column];
    }

    public int rows() {
        return rows;
    }

    public int columns() {
        return columns;
    }

    public Matrix sum(Matrix matrix) {
        if(matrix.rows != rows() || matrix.columns != columns()) {
            throw new IllegalArgumentException("Sum not possible");
        }

        for (int i = 0, l = data.length; i < l; i++) {
            for (int j = 0, k = data[i].length; j < k; j++) {
                data[i][j] = data[i][j] + matrix.get(i,j);
            }
        }

        return this;
    }

    public static class Builder {

        public static Matrix build(int columns, int rows) {
            return build(columns, rows);
        }

        public static Matrix build(double[][] data) {
            return build(data);
        }

    }
}
